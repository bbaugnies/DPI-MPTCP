// This file was automatically generated by bifcl from /home/benjamin/Bro/bro-2.3.1/src/analyzer/protocol/gtpv1/events.bif (plugin mode).


#include "events.bif.h"

EventHandlerPtr gtpv1_message; 
void BifEvent::generate_gtpv1_message(analyzer::Analyzer* analyzer, Connection* c, Val* hdr)
	{
	// Note that it is intentional that here we do not
	// check if ::gtpv1_message is NULL, which should happen *before*
	// BifEvent::generate_gtpv1_message is called to avoid unnecessary Val
	// allocation.

	val_list* vl = new val_list;

	vl->append(c->BuildConnVal());
	vl->append(hdr);

	mgr.QueueEvent(::gtpv1_message, vl, SOURCE_LOCAL, analyzer->GetID(), timer_mgr, c);
	} // event generation
EventHandlerPtr gtpv1_g_pdu_packet; 
void BifEvent::generate_gtpv1_g_pdu_packet(analyzer::Analyzer* analyzer, Connection* outer, Val* inner_gtp, Val* inner_ip)
	{
	// Note that it is intentional that here we do not
	// check if ::gtpv1_g_pdu_packet is NULL, which should happen *before*
	// BifEvent::generate_gtpv1_g_pdu_packet is called to avoid unnecessary Val
	// allocation.

	val_list* vl = new val_list;

	vl->append(outer->BuildConnVal());
	vl->append(inner_gtp);
	vl->append(inner_ip);

	mgr.QueueEvent(::gtpv1_g_pdu_packet, vl, SOURCE_LOCAL, analyzer->GetID(), timer_mgr, outer);
	} // event generation
EventHandlerPtr gtpv1_create_pdp_ctx_request; 
void BifEvent::generate_gtpv1_create_pdp_ctx_request(analyzer::Analyzer* analyzer, Connection* c, Val* hdr, Val* elements)
	{
	// Note that it is intentional that here we do not
	// check if ::gtpv1_create_pdp_ctx_request is NULL, which should happen *before*
	// BifEvent::generate_gtpv1_create_pdp_ctx_request is called to avoid unnecessary Val
	// allocation.

	val_list* vl = new val_list;

	vl->append(c->BuildConnVal());
	vl->append(hdr);
	vl->append(elements);

	mgr.QueueEvent(::gtpv1_create_pdp_ctx_request, vl, SOURCE_LOCAL, analyzer->GetID(), timer_mgr, c);
	} // event generation
EventHandlerPtr gtpv1_create_pdp_ctx_response; 
void BifEvent::generate_gtpv1_create_pdp_ctx_response(analyzer::Analyzer* analyzer, Connection* c, Val* hdr, Val* elements)
	{
	// Note that it is intentional that here we do not
	// check if ::gtpv1_create_pdp_ctx_response is NULL, which should happen *before*
	// BifEvent::generate_gtpv1_create_pdp_ctx_response is called to avoid unnecessary Val
	// allocation.

	val_list* vl = new val_list;

	vl->append(c->BuildConnVal());
	vl->append(hdr);
	vl->append(elements);

	mgr.QueueEvent(::gtpv1_create_pdp_ctx_response, vl, SOURCE_LOCAL, analyzer->GetID(), timer_mgr, c);
	} // event generation
EventHandlerPtr gtpv1_update_pdp_ctx_request; 
void BifEvent::generate_gtpv1_update_pdp_ctx_request(analyzer::Analyzer* analyzer, Connection* c, Val* hdr, Val* elements)
	{
	// Note that it is intentional that here we do not
	// check if ::gtpv1_update_pdp_ctx_request is NULL, which should happen *before*
	// BifEvent::generate_gtpv1_update_pdp_ctx_request is called to avoid unnecessary Val
	// allocation.

	val_list* vl = new val_list;

	vl->append(c->BuildConnVal());
	vl->append(hdr);
	vl->append(elements);

	mgr.QueueEvent(::gtpv1_update_pdp_ctx_request, vl, SOURCE_LOCAL, analyzer->GetID(), timer_mgr, c);
	} // event generation
EventHandlerPtr gtpv1_update_pdp_ctx_response; 
void BifEvent::generate_gtpv1_update_pdp_ctx_response(analyzer::Analyzer* analyzer, Connection* c, Val* hdr, Val* elements)
	{
	// Note that it is intentional that here we do not
	// check if ::gtpv1_update_pdp_ctx_response is NULL, which should happen *before*
	// BifEvent::generate_gtpv1_update_pdp_ctx_response is called to avoid unnecessary Val
	// allocation.

	val_list* vl = new val_list;

	vl->append(c->BuildConnVal());
	vl->append(hdr);
	vl->append(elements);

	mgr.QueueEvent(::gtpv1_update_pdp_ctx_response, vl, SOURCE_LOCAL, analyzer->GetID(), timer_mgr, c);
	} // event generation
EventHandlerPtr gtpv1_delete_pdp_ctx_request; 
void BifEvent::generate_gtpv1_delete_pdp_ctx_request(analyzer::Analyzer* analyzer, Connection* c, Val* hdr, Val* elements)
	{
	// Note that it is intentional that here we do not
	// check if ::gtpv1_delete_pdp_ctx_request is NULL, which should happen *before*
	// BifEvent::generate_gtpv1_delete_pdp_ctx_request is called to avoid unnecessary Val
	// allocation.

	val_list* vl = new val_list;

	vl->append(c->BuildConnVal());
	vl->append(hdr);
	vl->append(elements);

	mgr.QueueEvent(::gtpv1_delete_pdp_ctx_request, vl, SOURCE_LOCAL, analyzer->GetID(), timer_mgr, c);
	} // event generation
EventHandlerPtr gtpv1_delete_pdp_ctx_response; 
void BifEvent::generate_gtpv1_delete_pdp_ctx_response(analyzer::Analyzer* analyzer, Connection* c, Val* hdr, Val* elements)
	{
	// Note that it is intentional that here we do not
	// check if ::gtpv1_delete_pdp_ctx_response is NULL, which should happen *before*
	// BifEvent::generate_gtpv1_delete_pdp_ctx_response is called to avoid unnecessary Val
	// allocation.

	val_list* vl = new val_list;

	vl->append(c->BuildConnVal());
	vl->append(hdr);
	vl->append(elements);

	mgr.QueueEvent(::gtpv1_delete_pdp_ctx_response, vl, SOURCE_LOCAL, analyzer->GetID(), timer_mgr, c);
	} // event generation
