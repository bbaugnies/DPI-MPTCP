// This file was automatically generated by bifcl from event.bif.

	::bro_init = internal_handler("bro_init");
	::bro_done = internal_handler("bro_done");
	::new_connection = internal_handler("new_connection");
	::tunnel_changed = internal_handler("tunnel_changed");
	::connection_timeout = internal_handler("connection_timeout");
	::connection_state_remove = internal_handler("connection_state_remove");
	::connection_reused = internal_handler("connection_reused");
	::connection_status_update = internal_handler("connection_status_update");
	::connection_flow_label_changed = internal_handler("connection_flow_label_changed");
	::connection_external = internal_handler("connection_external");
	::udp_session_done = internal_handler("udp_session_done");
	::scheduled_analyzer_applied = internal_handler("scheduled_analyzer_applied");
	::new_packet = internal_handler("new_packet");
	::ipv6_ext_headers = internal_handler("ipv6_ext_headers");
	::esp_packet = internal_handler("esp_packet");
	::mobile_ipv6_message = internal_handler("mobile_ipv6_message");
	::packet_contents = internal_handler("packet_contents");
	::rexmit_inconsistency = internal_handler("rexmit_inconsistency");
	::ack_above_hole = internal_handler("ack_above_hole");
	::content_gap = internal_handler("content_gap");
	::gap_report = internal_handler("gap_report");
	::protocol_confirmation = internal_handler("protocol_confirmation");
	::protocol_violation = internal_handler("protocol_violation");
	::conn_stats = internal_handler("conn_stats");
	::conn_weird = internal_handler("conn_weird");
	::flow_weird = internal_handler("flow_weird");
	::net_weird = internal_handler("net_weird");
	::load_sample = internal_handler("load_sample");
	::signature_match = internal_handler("signature_match");
	::software_version_found = internal_handler("software_version_found");
	::software_parse_error = internal_handler("software_parse_error");
	::software_unparsed_version_found = internal_handler("software_unparsed_version_found");
	::OS_version_found = internal_handler("OS_version_found");
	::remote_connection_established = internal_handler("remote_connection_established");
	::remote_connection_closed = internal_handler("remote_connection_closed");
	::remote_connection_handshake_done = internal_handler("remote_connection_handshake_done");
	::remote_event_registered = internal_handler("remote_event_registered");
	::remote_connection_error = internal_handler("remote_connection_error");
	::remote_capture_filter = internal_handler("remote_capture_filter");
	::finished_send_state = internal_handler("finished_send_state");
	::remote_state_inconsistency = internal_handler("remote_state_inconsistency");
	::remote_log = internal_handler("remote_log");
	::remote_log_peer = internal_handler("remote_log_peer");
	::remote_pong = internal_handler("remote_pong");
	::remote_state_access_performed = internal_handler("remote_state_access_performed");
	::profiling_update = internal_handler("profiling_update");
	::reporter_info = internal_handler("reporter_info");
	::reporter_warning = internal_handler("reporter_warning");
	::reporter_error = internal_handler("reporter_error");
	::bro_script_loaded = internal_handler("bro_script_loaded");
	::file_opened = internal_handler("file_opened");
	::event_queue_flush_point = internal_handler("event_queue_flush_point");
	::get_file_handle = internal_handler("get_file_handle");
	::file_new = internal_handler("file_new");
	::file_over_new_connection = internal_handler("file_over_new_connection");
	::file_timeout = internal_handler("file_timeout");
	::file_gap = internal_handler("file_gap");
	::file_state_remove = internal_handler("file_state_remove");
	::dns_mapping_valid = internal_handler("dns_mapping_valid");
	::dns_mapping_unverified = internal_handler("dns_mapping_unverified");
	::dns_mapping_new_name = internal_handler("dns_mapping_new_name");
	::dns_mapping_lost_name = internal_handler("dns_mapping_lost_name");
	::dns_mapping_altered = internal_handler("dns_mapping_altered");
	::new_event = internal_handler("new_event");
	::root_backdoor_signature_found = internal_handler("root_backdoor_signature_found");
	::napster_signature_found = internal_handler("napster_signature_found");
	::kazaa_signature_found = internal_handler("kazaa_signature_found");
	::gaobot_signature_found = internal_handler("gaobot_signature_found");
	::anonymization_mapping = internal_handler("anonymization_mapping");
	::rotate_interval = internal_handler("rotate_interval");
	::rotate_size = internal_handler("rotate_size");
	::print_hook = internal_handler("print_hook");
