// This file was automatically generated by bifcl from /home/benjamin/Bro/bro-2.3.1/src/analyzer/protocol/snmp/types.bif (plugin mode).


#include <list>
#include <string>
#include "types.bif.h"

namespace plugin { namespace  Bro_SNMP {

std::list<std::pair<const char*, int> > __bif_types_init()
	{
	std::list<std::pair<const char*, int> > bifs;

	BifType::Record::SNMP::Header = internal_type("SNMP::Header")->AsRecordType();
	bifs.push_back(std::make_pair("SNMP::Header", 5));
	BifType::Record::SNMP::HeaderV1 = internal_type("SNMP::HeaderV1")->AsRecordType();
	bifs.push_back(std::make_pair("SNMP::HeaderV1", 5));
	BifType::Record::SNMP::HeaderV2 = internal_type("SNMP::HeaderV2")->AsRecordType();
	bifs.push_back(std::make_pair("SNMP::HeaderV2", 5));
	BifType::Record::SNMP::HeaderV3 = internal_type("SNMP::HeaderV3")->AsRecordType();
	bifs.push_back(std::make_pair("SNMP::HeaderV3", 5));
	BifType::Record::SNMP::PDU = internal_type("SNMP::PDU")->AsRecordType();
	bifs.push_back(std::make_pair("SNMP::PDU", 5));
	BifType::Record::SNMP::TrapPDU = internal_type("SNMP::TrapPDU")->AsRecordType();
	bifs.push_back(std::make_pair("SNMP::TrapPDU", 5));
	BifType::Record::SNMP::BulkPDU = internal_type("SNMP::BulkPDU")->AsRecordType();
	bifs.push_back(std::make_pair("SNMP::BulkPDU", 5));
	BifType::Record::SNMP::ScopedPDU_Context = internal_type("SNMP::ScopedPDU_Context")->AsRecordType();
	bifs.push_back(std::make_pair("SNMP::ScopedPDU_Context", 5));
	BifType::Record::SNMP::ObjectValue = internal_type("SNMP::ObjectValue")->AsRecordType();
	bifs.push_back(std::make_pair("SNMP::ObjectValue", 5));
	BifType::Record::SNMP::Binding = internal_type("SNMP::Binding")->AsRecordType();
	bifs.push_back(std::make_pair("SNMP::Binding", 5));
	BifType::Vector::SNMP::Bindings = internal_type("SNMP::Bindings")->AsVectorType();
	bifs.push_back(std::make_pair("SNMP::Bindings", 5));

	return bifs;
	}
} }

