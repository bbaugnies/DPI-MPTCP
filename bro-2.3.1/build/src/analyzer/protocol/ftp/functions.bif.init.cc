// This file was automatically generated by bifcl from /home/benjamin/Bro/bro-2.3.1/src/analyzer/protocol/ftp/functions.bif (plugin mode).


#include <list>
#include <string>
#include "functions.bif.h"

namespace plugin { namespace  Bro_FTP {

std::list<std::pair<const char*, int> > __bif_functions_init()
	{
	std::list<std::pair<const char*, int> > bifs;

	BifType::Record::ftp_port = internal_type("ftp_port")->AsRecordType();
	bifs.push_back(std::make_pair("ftp_port", 5));
	(void) new BuiltinFunc(BifFunc::bro_parse_ftp_port, "parse_ftp_port", 0);
	bifs.push_back(std::make_pair("parse_ftp_port", 1));
	(void) new BuiltinFunc(BifFunc::bro_parse_eftp_port, "parse_eftp_port", 0);
	bifs.push_back(std::make_pair("parse_eftp_port", 1));
	(void) new BuiltinFunc(BifFunc::bro_parse_ftp_pasv, "parse_ftp_pasv", 0);
	bifs.push_back(std::make_pair("parse_ftp_pasv", 1));
	(void) new BuiltinFunc(BifFunc::bro_parse_ftp_epsv, "parse_ftp_epsv", 0);
	bifs.push_back(std::make_pair("parse_ftp_epsv", 1));
	(void) new BuiltinFunc(BifFunc::bro_fmt_ftp_port, "fmt_ftp_port", 0);
	bifs.push_back(std::make_pair("fmt_ftp_port", 1));

	return bifs;
	}
} }

