# This file was automatically generated by bifcl from /home/benjamin/Bro/bro-2.3.1/src/analyzer/protocol/snmp/events.bif (plugin mode).

## An SNMP ``GetRequest-PDU`` message from either :rfc:`1157` or :rfc:`3416`.
##
## c: The connection over which the SNMP datagram is sent.
##
## is_orig: The endpoint which sent the SNMP datagram.
##
## header: SNMP version-dependent data that precedes PDU data in the top-level
##         SNMP message structure.
##
## pdu: An SNMP PDU data structure.
export {
global snmp_get_request: event(c: connection , is_orig: bool , header: SNMP::Header , pdu: SNMP::PDU );


## An SNMP ``GetNextRequest-PDU`` message from either :rfc:`1157` or
## :rfc:`3416`.
##
## c: The connection over which the SNMP datagram is sent.
##
## is_orig: The endpoint which sent the SNMP datagram.
##
## header: SNMP version-dependent data that precedes PDU data in the top-level
##         SNMP message structure.
##
## pdu: An SNMP PDU data structure.
global snmp_get_next_request: event(c: connection , is_orig: bool , header: SNMP::Header , pdu: SNMP::PDU );


## An SNMP ``GetResponse-PDU`` message from :rfc:`1157` or a
## ``Response-PDU`` from :rfc:`3416`.
##
## c: The connection over which the SNMP datagram is sent.
##
## is_orig: The endpoint which sent the SNMP datagram.
##
## header: SNMP version-dependent data that precedes PDU data in the top-level
##         SNMP message structure.
##
## pdu: An SNMP PDU data structure.
global snmp_response: event(c: connection , is_orig: bool , header: SNMP::Header , pdu: SNMP::PDU );


## An SNMP ``SetRequest-PDU`` message from either :rfc:`1157` or :rfc:`3416`.
##
## c: The connection over which the SNMP datagram is sent.
##
## is_orig: The endpoint which sent the SNMP datagram.
##
## header: SNMP version-dependent data that precedes PDU data in the top-level
##         SNMP message structure.
##
## pdu: An SNMP PDU data structure.
global snmp_set_request: event(c: connection , is_orig: bool , header: SNMP::Header , pdu: SNMP::PDU );


## An SNMP ``Trap-PDU`` message from :rfc:`1157`.
##
## c: The connection over which the SNMP datagram is sent.
##
## is_orig: The endpoint which sent the SNMP datagram.
##
## header: SNMP version-dependent data that precedes PDU data in the top-level
##         SNMP message structure.
##
## pdu: An SNMP PDU data structure.
global snmp_trap: event(c: connection , is_orig: bool , header: SNMP::Header , pdu: SNMP::TrapPDU );


## An SNMP ``GetBulkRequest-PDU`` message from :rfc:`3416`.
##
## c: The connection over which the SNMP datagram is sent.
##
## is_orig: The endpoint which sent the SNMP datagram.
##
## header: SNMP version-dependent data that precedes PDU data in the top-level
##         SNMP message structure.
##
## pdu: An SNMP PDU data structure.
global snmp_get_bulk_request: event(c: connection , is_orig: bool , header: SNMP::Header , pdu: SNMP::BulkPDU );


## An SNMP ``InformRequest-PDU`` message from :rfc:`3416`.
##
## c: The connection over which the SNMP datagram is sent.
##
## is_orig: The endpoint which sent the SNMP datagram.
##
## header: SNMP version-dependent data that precedes PDU data in the top-level
##         SNMP message structure.
##
## pdu: An SNMP PDU data structure.
global snmp_inform_request: event(c: connection , is_orig: bool , header: SNMP::Header , pdu: SNMP::PDU );


## An SNMP ``SNMPv2-Trap-PDU`` message from :rfc:`1157`.
##
## c: The connection over which the SNMP datagram is sent.
##
## is_orig: The endpoint which sent the SNMP datagram.
##
## header: SNMP version-dependent data that precedes PDU data in the top-level
##         SNMP message structure.
##
## pdu: An SNMP PDU data structure.
global snmp_trapV2: event(c: connection , is_orig: bool , header: SNMP::Header , pdu: SNMP::PDU );


## An SNMP ``Report-PDU`` message from :rfc:`3416`.
##
## c: The connection over which the SNMP datagram is sent.
##
## is_orig: The endpoint which sent the SNMP datagram.
##
## header: SNMP version-dependent data that precedes PDU data in the top-level
##         SNMP message structure.
##
## pdu: An SNMP PDU data structure.
global snmp_report: event(c: connection , is_orig: bool , header: SNMP::Header , pdu: SNMP::PDU );


## An SNMP PDU message of unknown type.
##
## c: The connection over which the SNMP datagram is sent.
##
## is_orig: The endpoint which sent the SNMP datagram.
##
## header: SNMP version-dependent data that precedes PDU data in the top-level
##         SNMP message structure.
##
## tag: The tag of the unknown SNMP PDU.
global snmp_unknown_pdu: event(c: connection , is_orig: bool , header: SNMP::Header , tag: count );


## An SNMPv3 ``ScopedPDUData`` of unknown type (neither plaintext or
## an encrypted PDU was in the datagram).
##
## c: The connection over which the SNMP datagram is sent.
##
## is_orig: The endpoint which sent the SNMP datagram.
##
## header: SNMP version-dependent data that precedes PDU data in the top-level
##         SNMP message structure.
##
## tag: The tag of the unknown SNMP PDU scope.
global snmp_unknown_scoped_pdu: event(c: connection , is_orig: bool , header: SNMP::Header , tag: count );


## An SNMPv3 encrypted PDU message.
##
## c: The connection over which the SNMP datagram is sent.
##
## is_orig: The endpoint which sent the SNMP datagram.
##
## header: SNMP version-dependent data that precedes PDU data in the top-level
##         SNMP message structure.
global snmp_encrypted_pdu: event(c: connection , is_orig: bool , header: SNMP::Header );


## A datagram with an unknown SNMP version.
##
## c: The connection over which the SNMP datagram is sent.
##
## is_orig: The endpoint which sent the SNMP datagram.
##
## version: The value of the unknown SNMP version.
global snmp_unknown_header_version: event(c: connection , is_orig: bool , version: count );

} # end of export section
module GLOBAL;
