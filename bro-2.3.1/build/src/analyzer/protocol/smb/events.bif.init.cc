// This file was automatically generated by bifcl from /home/benjamin/Bro/bro-2.3.1/src/analyzer/protocol/smb/events.bif (plugin mode).


#include <list>
#include <string>
#include "events.bif.h"

namespace plugin { namespace  Bro_SMB {

std::list<std::pair<const char*, int> > __bif_events_init()
	{
	std::list<std::pair<const char*, int> > bifs;

	::smb_message = internal_handler("smb_message");
	bifs.push_back(std::make_pair("smb_message", 2));
	::smb_com_tree_connect_andx = internal_handler("smb_com_tree_connect_andx");
	bifs.push_back(std::make_pair("smb_com_tree_connect_andx", 2));
	::smb_com_tree_disconnect = internal_handler("smb_com_tree_disconnect");
	bifs.push_back(std::make_pair("smb_com_tree_disconnect", 2));
	::smb_com_nt_create_andx = internal_handler("smb_com_nt_create_andx");
	bifs.push_back(std::make_pair("smb_com_nt_create_andx", 2));
	::smb_com_transaction = internal_handler("smb_com_transaction");
	bifs.push_back(std::make_pair("smb_com_transaction", 2));
	::smb_com_transaction2 = internal_handler("smb_com_transaction2");
	bifs.push_back(std::make_pair("smb_com_transaction2", 2));
	::smb_com_trans_mailslot = internal_handler("smb_com_trans_mailslot");
	bifs.push_back(std::make_pair("smb_com_trans_mailslot", 2));
	::smb_com_trans_rap = internal_handler("smb_com_trans_rap");
	bifs.push_back(std::make_pair("smb_com_trans_rap", 2));
	::smb_com_trans_pipe = internal_handler("smb_com_trans_pipe");
	bifs.push_back(std::make_pair("smb_com_trans_pipe", 2));
	::smb_com_read_andx = internal_handler("smb_com_read_andx");
	bifs.push_back(std::make_pair("smb_com_read_andx", 2));
	::smb_com_write_andx = internal_handler("smb_com_write_andx");
	bifs.push_back(std::make_pair("smb_com_write_andx", 2));
	::smb_get_dfs_referral = internal_handler("smb_get_dfs_referral");
	bifs.push_back(std::make_pair("smb_get_dfs_referral", 2));
	::smb_com_negotiate = internal_handler("smb_com_negotiate");
	bifs.push_back(std::make_pair("smb_com_negotiate", 2));
	::smb_com_negotiate_response = internal_handler("smb_com_negotiate_response");
	bifs.push_back(std::make_pair("smb_com_negotiate_response", 2));
	::smb_com_setup_andx = internal_handler("smb_com_setup_andx");
	bifs.push_back(std::make_pair("smb_com_setup_andx", 2));
	::smb_com_generic_andx = internal_handler("smb_com_generic_andx");
	bifs.push_back(std::make_pair("smb_com_generic_andx", 2));
	::smb_com_close = internal_handler("smb_com_close");
	bifs.push_back(std::make_pair("smb_com_close", 2));
	::smb_com_logoff_andx = internal_handler("smb_com_logoff_andx");
	bifs.push_back(std::make_pair("smb_com_logoff_andx", 2));
	::smb_error = internal_handler("smb_error");
	bifs.push_back(std::make_pair("smb_error", 2));

	return bifs;
	}
} }

