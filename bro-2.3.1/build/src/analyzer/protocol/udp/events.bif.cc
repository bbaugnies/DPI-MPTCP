// This file was automatically generated by bifcl from /home/benjamin/Bro/bro-2.3.1/src/analyzer/protocol/udp/events.bif (plugin mode).


#include "events.bif.h"

EventHandlerPtr udp_request; 
void BifEvent::generate_udp_request(analyzer::Analyzer* analyzer, Connection* u)
	{
	// Note that it is intentional that here we do not
	// check if ::udp_request is NULL, which should happen *before*
	// BifEvent::generate_udp_request is called to avoid unnecessary Val
	// allocation.

	val_list* vl = new val_list;

	vl->append(u->BuildConnVal());

	mgr.QueueEvent(::udp_request, vl, SOURCE_LOCAL, analyzer->GetID(), timer_mgr, u);
	} // event generation
EventHandlerPtr udp_reply; 
void BifEvent::generate_udp_reply(analyzer::Analyzer* analyzer, Connection* u)
	{
	// Note that it is intentional that here we do not
	// check if ::udp_reply is NULL, which should happen *before*
	// BifEvent::generate_udp_reply is called to avoid unnecessary Val
	// allocation.

	val_list* vl = new val_list;

	vl->append(u->BuildConnVal());

	mgr.QueueEvent(::udp_reply, vl, SOURCE_LOCAL, analyzer->GetID(), timer_mgr, u);
	} // event generation
EventHandlerPtr udp_contents; 
void BifEvent::generate_udp_contents(analyzer::Analyzer* analyzer, Connection* u, int is_orig, StringVal* contents)
	{
	// Note that it is intentional that here we do not
	// check if ::udp_contents is NULL, which should happen *before*
	// BifEvent::generate_udp_contents is called to avoid unnecessary Val
	// allocation.

	val_list* vl = new val_list;

	vl->append(u->BuildConnVal());
	vl->append(new Val(is_orig, TYPE_BOOL));
	vl->append(contents);

	mgr.QueueEvent(::udp_contents, vl, SOURCE_LOCAL, analyzer->GetID(), timer_mgr, u);
	} // event generation
