// This file was automatically generated by bifcl from /home/benjamin/Bro/bro-2.3.1/src/analyzer/protocol/mime/events.bif (plugin mode).


#include <list>
#include <string>
#include "events.bif.h"

namespace plugin { namespace  Bro_MIME {

std::list<std::pair<const char*, int> > __bif_events_init()
	{
	std::list<std::pair<const char*, int> > bifs;

	::mime_begin_entity = internal_handler("mime_begin_entity");
	bifs.push_back(std::make_pair("mime_begin_entity", 2));
	::mime_end_entity = internal_handler("mime_end_entity");
	bifs.push_back(std::make_pair("mime_end_entity", 2));
	::mime_one_header = internal_handler("mime_one_header");
	bifs.push_back(std::make_pair("mime_one_header", 2));
	::mime_all_headers = internal_handler("mime_all_headers");
	bifs.push_back(std::make_pair("mime_all_headers", 2));
	::mime_segment_data = internal_handler("mime_segment_data");
	bifs.push_back(std::make_pair("mime_segment_data", 2));
	::mime_entity_data = internal_handler("mime_entity_data");
	bifs.push_back(std::make_pair("mime_entity_data", 2));
	::mime_all_data = internal_handler("mime_all_data");
	bifs.push_back(std::make_pair("mime_all_data", 2));
	::mime_event = internal_handler("mime_event");
	bifs.push_back(std::make_pair("mime_event", 2));
	::mime_content_hash = internal_handler("mime_content_hash");
	bifs.push_back(std::make_pair("mime_content_hash", 2));

	return bifs;
	}
} }

