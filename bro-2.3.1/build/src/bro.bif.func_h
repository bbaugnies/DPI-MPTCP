// This file was automatically generated by bifcl from bro.bif.

namespace BifFunc { extern Val* bro_current_time(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_network_time(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_getenv(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_setenv(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_exit(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_terminate(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_system(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_system_env(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_piped_exec(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_md5_hash(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_sha1_hash(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_sha256_hash(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_md5_hmac(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_md5_hash_init(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_sha1_hash_init(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_sha256_hash_init(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_md5_hash_update(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_sha1_hash_update(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_sha256_hash_update(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_md5_hash_finish(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_sha1_hash_finish(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_sha256_hash_finish(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_rand(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_srand(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_syslog(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_identify_data(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_file_magic(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_find_entropy(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_entropy_test_init(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_entropy_test_add(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_entropy_test_finish(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_unique_id(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_unique_id_from(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_clear_table(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_same_object(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_val_size(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_resize(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_any_set(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_all_set(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_sort(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_order(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_cat(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_cat_sep(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_fmt(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_floor(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_sqrt(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_exp(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_ln(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_log10(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_is_external_connection(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_current_analyzer(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_getpid(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_bro_version(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_record_type_to_vector(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_type_name(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_reading_live_traffic(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_reading_traces(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_net_stats(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_resource_usage(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_get_matcher_stats(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_global_sizes(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_global_ids(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_lookup_ID(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_record_fields(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_do_profiling(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_is_local_interface(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_dump_rule_stats(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_bro_is_terminating(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_gethostname(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_is_v4_addr(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_is_v6_addr(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_routing0_data_to_addrs(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_addr_to_counts(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_counts_to_addr(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_to_int(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_int_to_count(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_double_to_count(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_to_count(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_interval_to_double(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_time_to_double(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_double_to_time(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_double_to_interval(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_port_to_count(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_count_to_port(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_to_addr(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_to_subnet(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_to_double(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_count_to_v4_addr(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_raw_bytes_to_v4_addr(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_to_port(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_bytestring_to_double(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_bytestring_to_count(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_ptr_name_to_addr(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_addr_to_ptr_name(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_bytestring_to_hexstr(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_hexstr_to_bytestring(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_encode_base64(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_encode_base64_custom(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_decode_base64(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_decode_base64_custom(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_uuid_to_string(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_merge_pattern(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_convert_for_pattern(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_string_to_pattern(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_strftime(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_strptime(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_mask_addr(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_remask_addr(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_is_tcp_port(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_is_udp_port(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_is_icmp_port(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_get_conn_transport_proto(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_get_port_transport_proto(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_connection_exists(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_lookup_connection(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_dump_current_packet(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_get_current_packet(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_dump_packet(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_lookup_addr(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_lookup_hostname_txt(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_lookup_hostname(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_lookup_location(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_lookup_asn(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_file_mode(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_disable_analyzer(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_skip_further_processing(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_set_record_packets(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_set_inactivity_timeout(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_open(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_open_for_append(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_close(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_write_file(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_set_buf(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_flush_all(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_mkdir(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_active_file(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_get_file_name(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_rotate_file(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_rotate_file_by_name(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_calc_next_rotate(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_file_size(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_disable_print_hook(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_enable_raw_output(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_precompile_pcap_filter(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_install_pcap_filter(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_pcap_error(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_install_src_addr_filter(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_install_src_net_filter(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_uninstall_src_addr_filter(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_uninstall_src_net_filter(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_install_dst_addr_filter(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_install_dst_net_filter(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_uninstall_dst_addr_filter(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_uninstall_dst_net_filter(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_enable_communication(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_checkpoint_state(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_rescan_state(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_capture_events(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_capture_state_updates(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_connect(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_disconnect(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_request_remote_events(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_request_remote_sync(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_request_remote_logs(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_set_accept_state(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_set_compression_level(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_listen(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_is_remote_event(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_send_state(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_send_id(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_terminate_communication(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_complete_handshake(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_send_ping(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_send_current_packet(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_get_event_peer(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_get_local_event_peer(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_send_capture_filter(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_suspend_processing(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_continue_processing(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_suspend_state_updates(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_resume_state_updates(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_match_signatures(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_preserve_prefix(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_preserve_subnet(Frame* frame, val_list*); } 
namespace BifFunc { extern Val* bro_anonymize_addr(Frame* frame, val_list*); } 
