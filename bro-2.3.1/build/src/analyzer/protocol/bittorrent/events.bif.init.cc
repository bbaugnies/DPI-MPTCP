// This file was automatically generated by bifcl from /home/benjamin/Bro/bro-2.3.1/src/analyzer/protocol/bittorrent/events.bif (plugin mode).


#include <list>
#include <string>
#include "events.bif.h"

namespace plugin { namespace  Bro_BitTorrent {

std::list<std::pair<const char*, int> > __bif_events_init()
	{
	std::list<std::pair<const char*, int> > bifs;

	::bittorrent_peer_handshake = internal_handler("bittorrent_peer_handshake");
	bifs.push_back(std::make_pair("bittorrent_peer_handshake", 2));
	::bittorrent_peer_keep_alive = internal_handler("bittorrent_peer_keep_alive");
	bifs.push_back(std::make_pair("bittorrent_peer_keep_alive", 2));
	::bittorrent_peer_choke = internal_handler("bittorrent_peer_choke");
	bifs.push_back(std::make_pair("bittorrent_peer_choke", 2));
	::bittorrent_peer_unchoke = internal_handler("bittorrent_peer_unchoke");
	bifs.push_back(std::make_pair("bittorrent_peer_unchoke", 2));
	::bittorrent_peer_interested = internal_handler("bittorrent_peer_interested");
	bifs.push_back(std::make_pair("bittorrent_peer_interested", 2));
	::bittorrent_peer_not_interested = internal_handler("bittorrent_peer_not_interested");
	bifs.push_back(std::make_pair("bittorrent_peer_not_interested", 2));
	::bittorrent_peer_have = internal_handler("bittorrent_peer_have");
	bifs.push_back(std::make_pair("bittorrent_peer_have", 2));
	::bittorrent_peer_bitfield = internal_handler("bittorrent_peer_bitfield");
	bifs.push_back(std::make_pair("bittorrent_peer_bitfield", 2));
	::bittorrent_peer_request = internal_handler("bittorrent_peer_request");
	bifs.push_back(std::make_pair("bittorrent_peer_request", 2));
	::bittorrent_peer_piece = internal_handler("bittorrent_peer_piece");
	bifs.push_back(std::make_pair("bittorrent_peer_piece", 2));
	::bittorrent_peer_cancel = internal_handler("bittorrent_peer_cancel");
	bifs.push_back(std::make_pair("bittorrent_peer_cancel", 2));
	::bittorrent_peer_port = internal_handler("bittorrent_peer_port");
	bifs.push_back(std::make_pair("bittorrent_peer_port", 2));
	::bittorrent_peer_unknown = internal_handler("bittorrent_peer_unknown");
	bifs.push_back(std::make_pair("bittorrent_peer_unknown", 2));
	::bittorrent_peer_weird = internal_handler("bittorrent_peer_weird");
	bifs.push_back(std::make_pair("bittorrent_peer_weird", 2));
	::bt_tracker_request = internal_handler("bt_tracker_request");
	bifs.push_back(std::make_pair("bt_tracker_request", 2));
	::bt_tracker_response = internal_handler("bt_tracker_response");
	bifs.push_back(std::make_pair("bt_tracker_response", 2));
	::bt_tracker_response_not_ok = internal_handler("bt_tracker_response_not_ok");
	bifs.push_back(std::make_pair("bt_tracker_response_not_ok", 2));
	::bt_tracker_weird = internal_handler("bt_tracker_weird");
	bifs.push_back(std::make_pair("bt_tracker_weird", 2));

	return bifs;
	}
} }

