// This file was automatically generated by bifcl from /home/benjamin/Bro/bro-2.3.1/src/analyzer/protocol/arp/events.bif (plugin mode).


#include "events.bif.h"

EventHandlerPtr arp_request; 
void BifEvent::generate_arp_request(analyzer::Analyzer* analyzer, StringVal* mac_src, StringVal* mac_dst, AddrVal* SPA, StringVal* SHA, AddrVal* TPA, StringVal* THA)
	{
	// Note that it is intentional that here we do not
	// check if ::arp_request is NULL, which should happen *before*
	// BifEvent::generate_arp_request is called to avoid unnecessary Val
	// allocation.

	val_list* vl = new val_list;

	vl->append(mac_src);
	vl->append(mac_dst);
	vl->append(SPA);
	vl->append(SHA);
	vl->append(TPA);
	vl->append(THA);

	mgr.QueueEvent(::arp_request, vl, SOURCE_LOCAL, analyzer->GetID(), timer_mgr);
	} // event generation
EventHandlerPtr arp_reply; 
void BifEvent::generate_arp_reply(analyzer::Analyzer* analyzer, StringVal* mac_src, StringVal* mac_dst, AddrVal* SPA, StringVal* SHA, AddrVal* TPA, StringVal* THA)
	{
	// Note that it is intentional that here we do not
	// check if ::arp_reply is NULL, which should happen *before*
	// BifEvent::generate_arp_reply is called to avoid unnecessary Val
	// allocation.

	val_list* vl = new val_list;

	vl->append(mac_src);
	vl->append(mac_dst);
	vl->append(SPA);
	vl->append(SHA);
	vl->append(TPA);
	vl->append(THA);

	mgr.QueueEvent(::arp_reply, vl, SOURCE_LOCAL, analyzer->GetID(), timer_mgr);
	} // event generation
EventHandlerPtr bad_arp; 
void BifEvent::generate_bad_arp(analyzer::Analyzer* analyzer, AddrVal* SPA, StringVal* SHA, AddrVal* TPA, StringVal* THA, StringVal* explanation)
	{
	// Note that it is intentional that here we do not
	// check if ::bad_arp is NULL, which should happen *before*
	// BifEvent::generate_bad_arp is called to avoid unnecessary Val
	// allocation.

	val_list* vl = new val_list;

	vl->append(SPA);
	vl->append(SHA);
	vl->append(TPA);
	vl->append(THA);
	vl->append(explanation);

	mgr.QueueEvent(::bad_arp, vl, SOURCE_LOCAL, analyzer->GetID(), timer_mgr);
	} // event generation
